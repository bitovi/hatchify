name: publish-npm

inputs:
  package:
    description: "The package name."
    required: true
  directory:
    description: "The directory name."
    required: true
  npm-token:
    description: "The token for publishing the package to npm."
    required: true
  github-token:
    description: "The token for pushing tags and version changes to github.."
    required: true
  segment:
    description: "The version segment to increment: major, minor, patch, or prerelease."
    required: true
  preId:
    description: 'Appended to the prerelease segment. (default: "")'

runs:
  using: "composite"

  steps:
    - name: Determine Tag
      id: tag
      shell: bash
      run: |
        if [[ ${{ inputs.segment }} == pre* ]]; then
          echo "tag=next" >> $GITHUB_OUTPUT
        else
          echo "tag=latest" >> $GITHUB_OUTPUT
        fi

    - name: Increment Version
      id: version
      shell: bash
      run: |
        git config --local user.email "Workflow: ${{ inputs.package }}[bot]"
        git config --local user.name "${{ inputs.package }}[bot]@workflow"

        DIRECTORY="./packages/${{ inputs.directory }}"

        if [[ ${{ inputs.segment }} == pre* ]]; then
          if [[ -n "${{ inputs.preId }}" ]]; then
            PREID_CMD="--preid ${{ inputs.preId }}"
          fi
        fi

        VERSION="$(cat $DIRECTORY/package.json | jq -r '.version')"
        echo "previousVersion=$VERSION" >> $GITHUB_OUTPUT

        npm version ${{ inputs.segment }} $PREID_CMD --workspace $DIRECTORY

        VERSION="$(cat $DIRECTORY/package.json | jq -r '.version')"
        echo "nextVersion=$VERSION" >> $GITHUB_OUTPUT

        git commit --all --message "Publish ${{ inputs.package }} v$VERSION"
        git tag "${{ inputs.package }}/v$VERSION"

    - name: Push Tag
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ inputs.github-token }}
        branch: ${{ github.ref }}
        tags: true

    - name: Build Changelog
      id: build_changelog
      uses: mikepenz/release-changelog-builder-action@v3
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
      with:
        fromTag: ${{ format('{0}/v{1}', inputs.package, steps.version.outputs.previousVersion) }}
        toTag: ${{ format('{0}/v{1}', inputs.package, steps.version.outputs.nextVersion) }}

    - name: Debug
      shell: bash
      run: |
        echo "-------- debug:"
        echo "failed? ${{ steps.build_changelog.outputs.failed }}"
        echo "pull_requests? ${{ steps.build_changelog.outputs.pull_requests }}"
        echo "categorized_prs? ${{ steps.build_changelog.outputs.categorized_prs }}"
        echo "uncategorized_prs? ${{ steps.build_changelog.outputs.uncategorized_prs }}"
        echo "fromTag? ${{ steps.build_changelog.outputs.fromTag }}"
        echo "toTag? ${{ steps.build_changelog.outputs.toTag }}"
        echo "changed_files? ${{ steps.build_changelog.outputs.changed_files }}"
        echo "${{ steps.build_changelog.outputs.changelog }}"
        echo "------- end debug"

    - name: Create Release
      uses: mikepenz/action-gh-release@v0.2.0-a03 #softprops/action-gh-release
      with:
        body: ${{ steps.build_changelog.outputs.changelog }}
        tag_name: ${{ format('{0}/v{1}', inputs.package, steps.version.outputs.nextVersion) }}

    - name: Publish to NPM Registry
      uses: JS-DevTools/npm-publish@v2
      with:
        token: ${{ inputs.npm-token }}
        package: ./packages/${{ inputs.directory }}
        access: public
        tag: ${{ steps.tag.outputs.tag }}
