name: publish-npm

inputs:
  package:
    description: "The package name."
    required: true
  directory:
    description: "The directory name."
    required: true
  npm-token:
    description: "The token for publishing the package to npm."
    required: true
  github-token:
    description: "The token for pushing tags and version changes to github.."
    required: true
  segment:
    description: "The version segment to increment: major, minor, patch, or prerelease."
    required: true
  preId:
    description: 'Appended to the prerelease segment. (default: "")'

runs:
  using: "composite"

  steps:
    - name: Determine Tag
      id: tag
      shell: bash
      run: |
        if [[ ${{ inputs.segment }} == pre* ]]; then
          echo "tag=next" >> $GITHUB_OUTPUT
        else
          echo "tag=latest" >> $GITHUB_OUTPUT
        fi

    - name: Increment Version
      id: version
      shell: bash
      run: |
        git config --local user.email os@bitovi.com
        git config --local user.name bitovi-os

        DIRECTORY="./packages/${{ inputs.directory }}"

        if [[ ${{ inputs.segment }} == pre* ]]; then
          if [[ -n "${{ inputs.preId }}" ]]; then
            PREID_CMD="--preid ${{ inputs.preId }}"
          fi
        fi

        VERSION="$(cat $DIRECTORY/package.json | jq -r '.version')"
        echo "previousVersion=$VERSION" >> $GITHUB_OUTPUT

        npm version ${{ inputs.segment }} $PREID_CMD --workspace $DIRECTORY

        VERSION="$(cat $DIRECTORY/package.json | jq -r '.version')"
        echo "nextVersion=$VERSION" >> $GITHUB_OUTPUT

        git commit --all --message "[skip ci] Publish ${{ inputs.package }} v$VERSION"
        git tag "${{ inputs.package }}/v$VERSION"

    - name: Push Tag
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ inputs.github-token }}
        branch: ${{ github.ref }}
        tags: true

    - name: Build Changelog
      id: build_changelog
      uses: mikepenz/release-changelog-builder-action@v3
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
      with:
        fromTag: ${{ format('{0}/v{1}', inputs.package, steps.version.outputs.previousVersion) }}
        toTag: ${{ format('{0}/v{1}', inputs.package, steps.version.outputs.nextVersion) }}
        configurationJson: |
          {
            "categories": [
              {
                "title": "## üöÄ Features",
                "labels": ["feature"]
              },
              {
                "title": "## üêõ Fixes",
                "labels": ["fix"]
              },
              {
                "key": "tests",
                "title": "## üß™ Tests",
                "labels": ["test"]
              },
              {
                "title": "## üí¨ Other",
                "labels": ["other"]
              },
              {
                "title": "## üì¶ Dependencies",
                "labels": ["dependencies"]
              }
            ],
            "ignore_labels": [
              "ignore"
            ],
            "sort": {
              "order": "ASC",
              "on_property": "mergedAt"
            },
            "template": "#{{CHANGELOG}}\n\n<details>\n<summary>Uncategorized</summary>\n\n#{{UNCATEGORIZED}}\n</details>",
            "pr_template": "- #{{TITLE}}\n   - PR: ##{{NUMBER}}",
            "empty_template": "- no changes",
            "label_extractor": [
              {
                "pattern": "(.) (.+)",
                "target": "$1",
                "flags": "gu"
              },
              {
                "pattern": "\\[Issue\\]",
                "on_property": "title",
                "method": "match"
              }
            ],
            "duplicate_filter": {
              "pattern": "\\[HATCH-....\\]",
              "on_property": "title",
              "method": "match"
            },
            "reference": {
              "pattern": ".*\\ \\#(.).*",
              "on_property": "body",
              "method": "replace",
              "target": "$1"
            },
            "transformers": [
              {
                "pattern": "[\\-\\*] (\\[(...|TEST|CI|SKIP)\\])( )?(.+?)\n(.+?[\\-\\*] )(.+)",
                "target": "- $4\n  - $6"
              }
            ],
            "trim_values": true,
            "max_tags_to_fetch": 200,
            "max_pull_requests": 200,
            "max_back_track_time_days": 365,
            "exclude_merge_branches": [
              "Owner/qa"
            ],
            "base_branches": [
              "main"
            ]
          }

    - name: Create Release
      uses: mikepenz/action-gh-release@v0.2.0-a03 #softprops/action-gh-release
      with:
        body: ${{ steps.build_changelog.outputs.changelog }}
        tag_name: ${{ format('{0}/v{1}', inputs.package, steps.version.outputs.nextVersion) }}

    - name: Publish to NPM Registry
      uses: JS-DevTools/npm-publish@v2
      with:
        token: ${{ inputs.npm-token }}
        package: ./packages/${{ inputs.directory }}
        access: public
        tag: ${{ steps.tag.outputs.tag }}
